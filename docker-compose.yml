version: '3.8'

networks:
  default:
    name: blogger_offer_bot
services:
  service_db:
    container_name: service_db
    image: postgres:13
    env_file:
      - .env
    ports:
      - "5432:5432"
    volumes:
      - postgres_data_bot:/var/lib/postgresql/data/pgdata
    networks:
      - default

  service_bot:
    container_name: service_bot
    build: .
    volumes:
      - .:/app
    command: /bin/bash -c "python3 -m app.bot"
    restart: always
    env_file:
      - .env
    depends_on:
      - service_db
    networks:
      - default

  nlp_service:
    container_name: nlp_service
    build: .
    volumes:
      - .:/app
    networks:
      - default
    depends_on:
      - service_bot
      - rabbitmq
    command: /bin/bash -c "python3 -m app.run_nlp_service"
    env_file:
      - .env
    restart: unless-stopped

  cv_service:
    container_name: cv_service
    build: .
    volumes:
      - .:/app
    networks:
      - default
    depends_on:
      - rabbitmq
    command: /bin/bash -c "python3 -m app.run_cv_service"
    env_file:
      - .env
    restart: unless-stopped

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    hostname: 'rabbitmq'
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: "guest"
      RABBITMQ_DEFAULT_PASS: "guest"
    volumes:
      - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/mnesia/
      - ./rabbitmq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
    networks:
      - default

volumes:
  postgres_data_bot:
    
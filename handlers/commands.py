from aiogram import Router, F, types, Bot
from aiogram.filters import CommandStart

from keyboards.for_exhibit import get_comment_and_photo_kb

router = Router() 

# –•—ç–Ω–¥–ª–µ—Ä –Ω–∞ –∫–æ–º–∞–Ω–¥—É /start
@router.message(CommandStart())
async def command_start_handler(message: types.Message):
    await message.reply("–ü—Ä–∏–≤–µ—Ç!üëã\n–Ø —Ç–≤–æ–π –ø–æ–º–æ—â–Ω–∏–∫-–≥–∏–¥ –ø–æ –º—É–∑–µ–π–Ω—ã–º —ç–∫—Å–ø–æ–Ω–∞—Ç–∞–º!\n\n–ü—Ä–∏—à–ª–∏ –º–Ω–µ —Ñ–æ—Ç–æ —ç–∫—Å–ø–æ–Ω–∞—Ç–∞, –æ –∫–æ—Ç–æ—Ä–æ–º —Ö–æ—á–µ—à—å —É–∑–Ω–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω–µ–µüì∑")

# –•—ç–Ω–¥–ª–µ—Ä –Ω–∞ –∫–æ–º–∞–Ω–¥—É –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–π —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏
@router.message(F.photo)
async def command_download_photo(message: types.Message, bot: Bot):
    photo = message.photo[-1]
    file_id = photo.file_id
    file = await message.bot.get_file(file_id)

    file_path = file.file_path
    download_path = "photo/photo.jpg"
    await bot.download_file(file_path, download_path)

    await message.answer("–í–∞—à–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è –ø—Ä–∏–Ω—è—Ç–∞ –≤ –æ–±—Ä–∞–±–æ—Ç–∫—É")
    # TODO: —Å–¥–µ–ª–∞—Ç—å –æ—Ç–≤–µ—Ç —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º –æ—Ç –º–æ–¥–µ–ª–∏

    await message.answer(
        "–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –¥–ª—è –≤—ã–±–æ—Ä–∞ –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è",
        reply_markup=get_comment_and_photo_kb()
    )

# –•—ç–Ω–¥–ª–µ—Ä –Ω–∞ –∫–Ω–æ–ø–∫—É "–û—Å—Ç–∞–≤–∏—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π"
@router.callback_query(F.data == "add_comment")
async def send_random_value(callback: types.CallbackQuery):
    await callback.message.answer("–ù–∞–ø–∏—à–∏—Ç–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π!")
    await callback.answer()

# –•—ç–Ω–¥–ª–µ—Ä –Ω–∞ –∫–Ω–æ–ø–∫—É "–ó–∞–≥—Ä—É–∑–∏—Ç—å –Ω–æ–≤–æ–µ —Ñ–æ—Ç–æ"
@router.callback_query(F.data == "add_photo")
async def send_random_value(callback: types.CallbackQuery):
    await callback.message.answer("–û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–æ–≤—ã–π —Å–Ω–∏–º–æ–∫!")
    await callback.answer()

# –•—ç–Ω–¥–ª–µ—Ä –Ω–∞ –∫–Ω–æ–ø–∫—É "–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏"
@router.callback_query(F.data == "get_comments")
async def send_random_value(callback: types.CallbackQuery):
    await callback.message.answer("–°–ø—Å–∏–æ–∫ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤:")
    # TODO: –¥–æ–±–∞–≤–∏—Ç—å –≤—Å—Ç–∞–≤–∫—É —Å–ø–∏—Å–∫–∞ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –ø–æ —ç–∫—Å–ø–æ–Ω–∞—Ç—É –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    await callback.answer()

# –•—ç–Ω–¥–ª–µ—Ä –Ω–∞ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
@router.message(F.text)
async def cmd_start(message: types.Message):
    # TODO: —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –≤ –±–∞–∑—É
    # TODO: –¥–æ–±–∞–≤–∏—Ç—å –æ–±—Ä–∞–±–æ—Ç–∫—É –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è –≤ –º–æ–¥–µ–ª–∏, –æ–ø—Ä–µ–¥–µ–ª—è—é—â–µ–π —Ç–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å —Ç–µ–∫—Å—Ç–∞
    await message.answer("–û—Ç–≤–µ—Ç –º–æ–¥–µ–ª–∏ —Å —Ç–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å—é —Ç–µ–∫—Å—Ç–∞ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è")